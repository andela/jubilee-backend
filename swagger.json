{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Barefoot Nomad",
        "description": "Barefoot Nomad - Making company travel and accomodation easy and convenient."
    },
    "servers": [
        {
          "url": "http://localhost:3000/"
        },
        {
          "url": "https://jubilee-backend-staging.herokuapp.com/"
        }
      ],
    "host": "",
    "basePath": "/api",
    "securityDefinitions": {
        "Bearer": {
            "description": "Standard Authorization header using the bearer scheme. Example: \"bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoint for Authentication"
        },
        {
            "name": "Users",
            "description": "Endpoint for Users"
        }
    ],
    "paths": {
        "/auth/signup/user": {
            "post": {
                "description": "Registers a User",
                "summary": "Creates a new user on the system",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user information",
                        "schema": {
                            "$ref": "#/requestBody/userSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully"
                    },
                    "400": {
                        "description": "Please fill in the fields"
                    },
                    "409": {
                        "description": "User with email already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/signup/supplier": {
            "post": {
                "description": "Registers a Suppler",
                "summary": "Creates a new supplier company and add the admin user to the database",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing supplier information",
                        "schema": {
                            "$ref": "#/requestBody/supplierSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Supplier created successfully"
                    },
                    "400": {
                        "description": "Please fill in the fields"
                    },
                    "409": {
                        "description": "User with email already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/verify": {
            "get": {
              "description": "The endpoint verifies a new user's verification link and marks the user account as verified if successful",
              "summary": "Marks User account as verified",
              "tags": [
                "Auth"
              ],
              "parameters": [
                {
                  "name": "token",
                  "in": "query",
                  "schema": {
                    "type": "string"
                  },
                  "example": "eyJhbGciOiJIUzI1NiJ9.Mg.hbsvkNj_kZvQYNtZxa4r2GXoNRLq1q4xC9qSq48Dwhw"
                }
              ],
              "responses": {
                "500": {
                  "description": "Internal Server Error"
                },
                "400": {
                  "description": "Invalid Token/User does not exist",
                  "content": {
                    "application/json; charset=utf-8": {
                      "schema": {
                        "type": "string"
                      }
                    }
                  }
                },
                "200": {
                  "description": "Account verification success"
                }
              }
            }
          },
          "/auth/signup/company": {
            "post": {
                "description": "Registers a Company",
                "summary": "Creates a new company on the system",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing a company signup information",
                        "schema": {
                            "$ref": "#/requestBody/companySignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully"
                    },
                    "400": {
                        "description": "Please fill in the fields"
                    },
                    "409": {
                        "description": "User with email already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user login information",
                        "schema": {
                            "$ref": "#/requestBody/loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid login details"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/": {
            "put": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "The Id of the user to be updated"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "description": "This is the request body object containing user update",
                        "schema": {
                            "$ref": "#/requestBody/putUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "schema": {
                        "$ref": "#/requestBody/putUserRequest"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Send a password reset email to the user",
                "summary": "User can reset password",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                      "in": "body",
                      "name": "email",
                      "required": true,
                      "description": "The user email for password reset",
                      "schema": {
                        "$ref": "#/requestBody/resetPasswordRequest"
                      }
                    }
                  ],
                "responses": {
                    "200": {
                        "description": "Check your email for password reset link"
                    },
                    "400": {
                      "description": "Email is required || Email must be valid"
                    },
                    "404": {
                        "description": "User with email does not exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
        "requestBody": {
            "userSignupRequest": {
                "title": "User Signup Request",
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "First name of the user",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Last name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The Password of the user",
                        "type": "string"
                    },
                    "birthdate": {
                        "description": "The date of birth of user",
                        "type": "date"
                    },
                    "companyName": {
                        "description": "The user's company name",
                        "type": "string"
                    },
                    "preferredCurrency": {
                        "description": "The user's currency preference",
                        "type": "string"
                    },
                    "street": {
                        "description": "The user's street address",
                        "type": "string"
                    },
                    "city": {
                        "description": "The user's city address",
                        "type": "string"
                    },
                    "state": {
                        "description": "The user's state address",
                        "type": "string"
                    },
                    "country": {
                        "description": "The user's country address",
                        "type": "string"
                    },
                    "zip": {
                        "description": "The user's zip code",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "The user's phone number",
                        "type": "string"
                    },
                    "role": {
                        "description": "The user's role",
                        "type": "string"
                    },
                    "department": {
                        "description": "The user's department",
                        "type": "string"
                    }

                },
                "example": {
                    "firstName": "King",
                    "lastName": "David",
                    "email": "barefootnomad@gmail.com",
                    "country": "Nigeria",
                    "companyName": "Andela",
                    "password": "Elija455h",
                    "gender": "male",
                    "street": "20, Board Street",
                    "city": "ikeja",
                    "state": "Lagos",
                    "birthdate": "2010-01-01",
                    "phoneNumber": "08063345598"
                  },
                "required": [
                    "firstName, lastName, email, password"
                ]
            },
            "supplierSignupRequest": {
                "title": "User Signup Request",
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "First name of the Admin",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Last name of the Admin",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the Admin",
                        "type": "string"
                    },
                    "password": {
                        "description": "The Password of the Admin",
                        "type": "string"
                    },
                    "companyAddress": {
                        "description": "The supplier's company address",
                        "type": "string"
                    },
                    "companyName": {
                        "description": "The supplier's company name",
                        "type": "string"
                    },
                    "categoryOfServiceId": {
                        "description": "The supplier's category of service",
                        "type": "integer"
                    },
                    "phoneNumber": {
                        "description": "The Admin's phone number",
                        "type": "string"
                    }
                },
                "example": {
                    "firstName": "King",
                    "lastName": "David",
                    "email": "barefootnomad@gmail.com",
                    "companyName": "Andela",
                    "companyAddress": "No 1, clinton str, Lagos, Nigeria",
                    "categoryOfServiceId": 2,
                    "password": "Elija455h",
                    "phoneNumber": "08063345598"
                  },
                "required": [
                    "firstName, lastName, email, companyName, companyAddress, categoryOfService, password"
                ]
            },
            "companySignUpRequest": {
                "title": "Company Signup Request",
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "first name of the Company Admin",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Last name of the Company Admin",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The Password of the user",
                        "type": "string"
                    },
                    "companyName": {
                        "description": "The user's company name",
                        "type": "string"
                    },
                    "companyAddress": {
                        "description": "The company's Address",
                        "type": "string"
                    },
                    "companySizeId": {
                        "description": "The company's Size, between 1-101 and Above,a id reference is passed to the server",
                        "type": "integer"
                    },
                    "companyPlanId": {
                        "description": "The plan to subscribe, gold,silver or platinum ,a id reference is passed to the server",
                        "type": "integer"
                    }
                },
                "example": {
                    "firstName": "Ayodelre",
                    "lastName": "Akin",
                    "companySizeId": 1,
                    "companyPlanId": 2,
                    "email": "daylay33@gmail.com",
                    "companyAddress": "30, Ania Street",
                    "companyName": "Andela",
                    "password": "Elijah38490"
                },
                "required": [
                    "firstName, lastName, email,password,companySizeId,companyPlanId,companyAddress,companyName"
                ]
            },
            "loginRequest": {
                "title": "Login Request",
                "type": "object",
                "properties": {
                    "email": {
                        "description": "Email address of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The Password of the user",
                        "type": "string"
                    }
                },
                "example": {
                    "email": "barefootnomad@gmail.com",
                    "password": "Elija455h"
                },
                "required": [
                    "email, password,"
                ]
            },
            "putUserRequest": {
                "title": "Update User",
                "type": "object",
                "properties": {
                    "username": {
                        "description": "New username",
                        "type": "string"
                    },
                    "email": {
                        "description": "New user email",
                        "type": "string"
                    },
                    "bio": {
                        "description": "User bio",
                        "type": "string"
                    },
                    "image": {
                        "description": "User image",
                        "type": "string"
                    },
                    "password": {
                        "description": "New password",
                        "type": "string"
                    }
                },
                "example": {
                    "username": "Example",
                    "email": "Example",
                    "bio": "Example",
                    "image": "Example",
                    "password": "Example"
                }
            },
            "resetPasswordRequest": {
                "title": "Password Reset Request",
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Email address of the user user",
                    "type": "string"
                  }
                },
                "example": {
                    "email": "johndoe@example.com"
                }
              }
        }
    }
    