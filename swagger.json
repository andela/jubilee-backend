{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Barefoot Nomad",
        "description": "Barefoot Nomad - Making company travel and accomodation easy and convenient."
    },
    "schemes": [
        "https"
    ],
    "servers": [
        {
          "url": "http://localhost:3000/"
        },
        {
          "url": "https://jubilee-backend-staging.herokuapp.com/"
        }
      ],
    "host": "",
    "basePath": "/api",
    "securityDefinitions": {
        "Bearer": {
            "description": "Standard Authorization header using the bearer scheme. Example: \"bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoint for Authentication"
        },
        {
            "name": "Users",
            "description": "Endpoint for Users"
        }
    ],
    "paths": {
        "/auth/signup": {
            "post": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user information",
                        "schema": {
                            "$ref": "#/requestBody/signUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully"
                    },
                    "400": {
                        "description": "Please fill in the fields"
                    },
                    "409": {
                        "description": "User with email already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user login information",
                        "schema": {
                            "$ref": "#/requestBody/loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid login details"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/": {
            "put": {
                "description": "#",
                "summary": "#",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "The Id of the user to be updated"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "description": "This is the request body object containing user update",
                        "schema": {
                            "$ref": "#/requestBody/putUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "schema": {
                        "$ref": "#/requestBody/putUserRequest"
                    }
                }
            }
        }
    },
        "requestBody": {
            "signUpRequest": {
                "title": "Signup Request",
                "type": "object",
                "properties": {
                    "username": {
                        "description": "Username of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The Password of the user",
                        "type": "string"
                    }
                },
                "example": {
                    "username": "Mike",
                    "email": "efe.yusuf@andela.com",
                    "password": "password123"
                },
                "required": [
                    "username, email, password"
                ]
            },
            "loginRequest": {
                "title": "Login Request",
                "type": "object",
                "properties": {
                    "email": {
                        "description": "Email address of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The Password of the user",
                        "type": "string"
                    }
                },
                "example": {
                    "email": "efe.yusuf@andela.com",
                    "password": "password123"
                },
                "required": [
                    "email, password,"
                ]
            },
            "putUserRequest": {
                "title": "Update User",
                "type": "object",
                "properties": {
                    "username": {
                        "description": "New username",
                        "type": "string"
                    },
                    "email": {
                        "description": "New user email",
                        "type": "string"
                    },
                    "bio": {
                        "description": "User bio",
                        "type": "string"
                    },
                    "image": {
                        "description": "User image",
                        "type": "string"
                    },
                    "password": {
                        "description": "New password",
                        "type": "string"
                    }
                },
                "example": {
                    "username": "Example",
                    "email": "Example",
                    "bio": "Example",
                    "image": "Example",
                    "password": "Example"
                }
            }
        }
    }
    